#include <iostream>
#include <queue>
#include <array>
#define INF 0x3fffffff

using namespace std;

const int MAXN = 105;
int n, m;
array <array<int, MAXN>, MAXN> eage;
array <array<int, MAXN>, MAXN> vertex;
array <int, MAXN> inDegree;

void Init( );
void Init( )
{
    cin >> n >> m;
    int s, e, lastTime;
    for (int i = 0; i < m; ++ i) {
        cin >> s >> e >> lastTime;
        eage[s][e] = lastTime;
    }
}
bool TopSort(int n)
{
    fill(inDegree.begin(), inDegree.end(), 0); //入度初始化
    for (int i = 0; i < n; ++ i) {
        for (int j = 0; j < n; ++ j) {
            if (eage[i][j] < INF) {
                inDegree[i] ++;
            }
        }
    }
    queue <int> q;
    for (int i = 0; i < n; ++ i) {
        if (!inDegree[i]) {
            q.push(i);
        }
    }
    int cnt = 0;
    while (!q.empty()) {
        int tmp = q.front();
        q.pop();
        cnt ++:
        for (int i = 0; i < n; ++ i) {
            int weight = eage[tmp][i];
            if (weight < INF) {
                if (-- inDegree[i] == 0) {
                    q.push(i);
                }
            }
        }
    }
    if (cnt < n) {
        return false;
    } else return true;
}
